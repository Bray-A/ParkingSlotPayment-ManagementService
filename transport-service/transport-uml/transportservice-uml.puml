@startuml
actor User
participant "TransportController" as Controller
participant "TransportService" as Service
participant "TransportRepository" as Repository


User -> Controller: createTransport(Transport transport)
activate User
activate Controller
Controller -> Service: addTransport(Transport)
activate Service
Service -> Repository: save(Transport)
activate Repository
Repository -> Service: Transport (created)
deactivate Repository
Service -> Controller: Transport (created)
deactivate Service
Controller -> User: Transport created
deactivate Controller


User -> Controller: getName(Long id)
activate Controller
Controller -> Service: getTransportById(id)
activate Service
Service -> Repository: findById(id)
activate Repository

alt Transport exists
    Repository -> Service: Transport
    deactivate Repository
    Service -> Controller: Transport
    deactivate Service
    Controller -> User: Transport found
deactivate Controller
else Transport not found

    Controller -> User: Transport not found
deactivate Controller
end


User -> Controller: getAllTransport()
activate Controller
Controller -> Service: getAllTransport()
activate Service
Service -> Repository: findAll()
activate Repository
Repository -> Service: List<Transport>
deactivate Repository
Service -> Controller: List<Transport>
deactivate Service
Controller -> User: List of Transport
deactivate Controller
deactivate User
@enduml
